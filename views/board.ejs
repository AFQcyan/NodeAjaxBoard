<% const EJSDATA=JSON.parse(jsonData) %>
    <!DOCTYPE html>
    <html lang="en">

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="stylesheet" href="/bootstrap/css/bootstrap.min.css">
        <link rel="stylesheet" href="/fontawesome/css/all.min.css">
        <link rel="stylesheet" href="/css/trigger.css">
        <script src="/bootstrap/js/bootstrap.min.js"></script>
        <title>Document</title>
    </head>

    <body>
        <header class="p-3 d-flex justify-content-between">
            <h1 class="fw-bold">NodeAjaxBoard</h1>
        </header>
        <hr class="m-0">
        <section id="boardContainer" class="mt-3 mx-auto p-2 row col-11">
            <div class="p-0 d-flex justify-content-between">
                <button type="button" class="btn btn-primary board-post" data-bs-toggle="modal"
                    data-bs-target="#boardPostModal">
                    글 작성하기
                </button>
                <h2 id="currentPageShow">Page <%= currentPage %> / <%= MaxPage %>
                </h2>
            </div>
            <table class="table text-center table-bordered mt-4">
                <thead>
                    <tr>
                        <th>번호</th>
                        <th>아이디</th>
                        <th>제목</th>
                        <th>날짜</th>
                    </tr>
                </thead>
                <tbody>
                    <% for( let i=0; i < EJSDATA.length; i++ ) { %>
                        <tr>
                            <td>
                                <%= EJSDATA[i].idx %>
                            </td>
                            <td>
                                <%= EJSDATA[i].id %>
                            </td>
                            <td>
                                <%= EJSDATA[i].title %>
                            </td>
                            <td>
                                <%= new Date(new Date(EJSDATA[i].datetime).getTime() + (9 * 60 * 60 *
                                    1000)).toISOString().replace('T', ' ' ).slice(0, -5); %>
                            </td>
                        </tr>
                        <% } %>
                </tbody>
            </table>
            <div id="pageNation" class="d-flex justify-content-center mt-2 gap-3">
                <% if (currentPage !==1) { %>
                    <button class='btn btn-outline-primary' onclick="window.location.href = '/?page=1'"><i
                            class="fa-solid fa-chevron-left"></i>
                        <i class="fa-solid fa-chevron-left"></i> </button>
                    <button class='btn btn-outline-primary'
                        onclick="window.location.href = '/?page=<%= currentPage - 5 > 1 ? currentPage - 5 : 1  %>'"><i
                            class="fa-solid fa-chevron-left"></i></button>
                    <% } %>
                        <% for( let i=((Math.ceil(currentPage/pagePerPage) -1) * 5) + 1; i
                            <=(Math.ceil(currentPage/pagePerPage) * 5) && i <=MaxPage; i++ ) { %>
                            <% if (i==currentPage) { %>
                                <button class='btn btn-primary' onclick="window.location.href = '/?page=<%= i %>'">
                                    <%= i %>
                                </button>
                                <% } else { %>
                                    <button class='btn btn-outline-primary'
                                        onclick="window.location.href = '/?page=<%= i %>'">
                                        <%= i %>
                                    </button>
                                    <% } %>
                                        <% } %>
                                            <% if (currentPage !==MaxPage) { %>
                                                <button class='btn btn-outline-primary'
                                                    onclick="window.location.href = '/?page=<%= currentPage + 5 %>'"><i
                                                        class="fa-solid fa-chevron-right"></i></button>
                                                <button class='btn btn-outline-primary'
                                                    onclick="window.location.href = '/?page=<%= MaxPage %>'"><i
                                                        class="fa-solid fa-chevron-right"></i>
                                                    <i class="fa-solid fa-chevron-right"></i></button>
                                                <% } %>
            </div>
        </section>
        <div class="modal fade" id="boardPostModal" tabindex="-1" aria-labelledby="boardPostModalLabel"
            aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="boardPostModalLabel">글 작성하기</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body my-0 mx-auto col-11">
                        <div class="board-input row">
                            <p class="m-1 p-0">아이디<span class="text-danger">*</span></p>
                            <input type="text" name="id" id="boardId" class="input" placeholder="아이디" required>
                        </div>
                        <div class="board-input row">
                            <p class="m-1 p-0">제목<span class="text-danger">*</span></p>
                            <input type="text" name="title" id="boardTitle" class="input" placeholder="글 제목" required>
                        </div>
                        <div class="board-input row">
                            <p class="m-1 mt-2 p-0">글<span class="text-danger">*</span></p>
                            <textarea name="detail" id="boardDetail" class="px-2 py-1" class="input" cols="30" rows="10"
                                required></textarea>
                        </div>
                        <input type="hidden" name="currPage" value="<%= currentPage %>">
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-secondary" data-bs-dismiss="modal">닫기</button>
                        <button type="submit" class="btn btn-primary" id="boardSubmit">글
                            등록하기</button>
                    </div>
                </div>
            </div>
        </div>
    </body>
    <script>

        const currentPageShow = document.querySelector('#currentPageShow')
        const detailInput = document.querySelector('#boardDetail')
        const idInput = document.querySelector('#boardId')
        const titleInput = document.querySelector('#boardTitle')
        const boardList = document.querySelector('#boardContainer table tbody')
        const pageNationDiv = document.querySelector('#pageNation')

        detailInput.addEventListener('input', () => {
            detailInput.placeholder = '내용'
            detailInput.classList.remove('null-input')
        })
        idInput.addEventListener('input', () => {
            idInput.placeholder = '아이디'
            idInput.classList.remove('null-input')
        })
        titleInput.addEventListener('input', () => {
            titleInput.placeholder = '제목'
            titleInput.classList.remove('null-input')
        })
        //얘는 버튼 눌렀을때 돌아가는 놈
        document.querySelector('#boardSubmit').addEventListener('click', (e) => {
            let detail = detailInput.value;
            let id = idInput.value;
            let title = titleInput.value;
            let httpReq = new XMLHttpRequest();
            httpReq.onreadystatechange = () => {
                if (httpReq.readyState == 4 && httpReq.status == 200) {
                    let json = JSON.parse(httpReq.responseText);
                    boardList.innerHTML = "";

                    const list = json.list; //DB data 가져오기
                    list.forEach(item => {
                        let div = document.createElement('tr');
                        div.className = "board-each col-12";
                        div.innerHTML = `
                        <td>${item.idx}</td>
                        <td>${item.id}</td>
                        <td>${item.title}</td>
                        <td>${new Date(new Date(item.datetime).getTime() + (9 * 60 * 60 * 1000)).toISOString().replace('T', ' ').slice(0, -5)}</td>
                    `;
                        boardList.append(div)
                    });

                    currentPageShow.innerHTML = `Page 1 / ${json.MaxPage}`
                    pageNationDiv.innerHTML = ''

                    const currentPage = parseInt(json.currPage);
                    const pagePerPage = parseInt(json.pPerPage);

                    for (let i = ((Math.ceil(currentPage / pagePerPage) - 1) * 5) + 1; i
                        <= (Math.ceil(currentPage / pagePerPage) * 5) && i <= MaxPage; i++) {
                        const btn = document.createElement('button')
                        if (i == 1) {
                            btn.className = 'btn btn-primary'
                        } else {
                            btn.className = 'btn btn-outline-primary'
                        }
                        btn.textContent = i
                        btn.onclick = () => {
                            window.location.href = `/?page=${i}`
                        }
                        pageNationDiv.append(btn)
                    }
                    if (!(json.MaxPage < 2)) {
                        const rightBtn = document.createElement('button')
                        rightBtn.className = "btn btn-outline-primary"
                        rightBtn.innerHTML = `<i class='fa-solid fa-chevron-right'></i>`
                        rightBtn.onclick = () => {
                            window.location.href = `/?page=2`
                        }
                        pageNationDiv.append(rightBtn)
                    }
                }
            };
            if (valuelValidate(id, title, detail)) {
                httpReq.open('POST', '/insert/board');
                httpReq.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
                httpReq.send(`detail=${detail}&id=${id}&title=${title}`)
            }
        })
        function valuelValidate(id, title, detail) {
            let flag = true;
            if (id == '') {
                idInput.placeholder = '아이디를 입력하셔야합니다!';
                idInput.classList.add('null-input');
                flag = false;
            }
            if (title == '') {
                titleInput.placeholder = '제목을 입력하셔야합니다!';
                titleInput.classList.add('null-input');
                flag = false;
            }
            if (detail == '') {
                detailInput.placeholder = '내용을 입력하셔야합니다!';
                detailInput.classList.add('null-input');
                flag = false;
            }
            return flag;
        }
    </script>

    </html>